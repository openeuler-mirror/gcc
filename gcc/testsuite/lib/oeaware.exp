#   Copyright (C) 2025-2025 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GCC; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.

# gcc/testsuite/gcc.dg/oeaware.exp

proc check-section-exists { section } {
    for {set level 1} {$level <= 5} {incr level} {
        if {[catch {upvar $level output_file output_file}]} {
            continue;
        }
        if {[info exists output_file]} {
            break
        }
    }
    
    if {![info exists output_file]} {
        fail "Cannot find output_file in any parent scope"
        return
    }
    
    if {![file exists $output_file]} {
        fail "Output file $output_file does not exist"
        return
    }
    
    set cmd "objdump -h $output_file | grep -q '$section'"
    if {[catch {exec sh -c $cmd}]} {
        fail "Section $section not found"
    } else {
        pass "Section $section exists"
    }
}

proc check-section-content { section expected } {
    for {set level 1} {$level <= 5} {incr level} {
        if {[catch {upvar $level output_file output_file}]} { continue }
        if {[info exists output_file]} { break }
    }

    if {![info exists output_file]} {
        fail "Cannot find output_file in any parent scope"
        return
    }

    if {![file exists $output_file]} {
        fail "Output file $output_file does not exist"
        return
    }

    set cmd "objdump -s -j $section $output_file | tail -n +5 | awk '{ printf \"%s%s%s%s\", \$5, \$4, \$3, \$2 }'"
    if {[catch {set result [exec sh -c $cmd]} err]} {
        fail "Failed to read section content: $err"
        return
    }

    set result [string trim $result]
    if {$result eq $expected} {
        pass "Section $section content matches"
    } else {
        fail "Section $section content mismatch (got '$result', expected '$expected')"
    }
}